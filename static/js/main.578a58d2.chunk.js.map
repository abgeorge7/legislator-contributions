{"version":3,"sources":["utils/api.js","utils/constants.js","App.js","index.js"],"names":["baseUrl","process","getTopContributors","candidateId","a","fetch","then","res","json","data","response","contributors","contributor","notice","map","getCandidates","stateId","legislator","getCandidateDetails","summary","getTopIndustries","industries","industry","getTopSectors","sectors","sector","getCandidateFinances","member_profile","obj","attributes","assets","asset","x","positions","position","catch","err","console","log","states","key","value","text","App","props","sortAsc","b","parseFloat","details","total","sortDesc","getCandidatesForState","e","setState","loading","selectedState","candidates","Promise","all","candidate","cid","filter","finances","sort","state","sortDirection","selectCandidate","id","selectedCandidate","loadingCandidateDetails","topContributors","topIndustries","topSectors","getParty","str","getChamber","sortTable","newCandidates","reverse","newSortDirection","formatCurrency","amount","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","this","className","Container","Grid","columns","Column","Select","placeholder","options","onChange","href","target","rel","Image","src","alt","Segment","Icon","name","size","onClick","firstlast","party","chamber","next_election","Fragment","Dimmer","active","inverted","Loader","spent","cash_on_hand","debt","data_year","net_low","net_high","asset_low","asset_high","pos","title","organization","org_name","industry_name","sector_name","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.578a58d2.chunk.js","sourcesContent":["const baseUrl = `https://www.opensecrets.org/api/?apikey=${process.env.REACT_APP_API_KEY}&output=json`;\n\nexport const getTopContributors = async candidateId =>\n  await fetch(`${baseUrl}&method=candContrib&cid=${candidateId}`)\n    .then(res => res.json())\n    .then(data =>\n      data &&\n      data.response &&\n      data.response.contributors &&\n      data.response.contributors.contributor &&\n      data.response.contributors[\"@attributes\"]\n        ? {\n            notice: data.response.contributors[\"@attributes\"].notice,\n            contributors: data.response.contributors.contributor.map(\n              contributor => contributor[\"@attributes\"]\n            )\n          }\n        : []\n    );\n\nexport const getCandidates = async stateId =>\n  await fetch(`${baseUrl}&method=getLegislators&id=${stateId}`)\n    .then(res => res.json())\n    .then(data =>\n      data && data.response && data.response.legislator\n        ? data.response.legislator.map(legislator => legislator[\"@attributes\"])\n        : []\n    );\n\nexport const getCandidateDetails = async candidateId =>\n  await fetch(`${baseUrl}&method=candSummary&cid=${candidateId}`)\n    .then(res => res.json())\n    .then(data =>\n      data &&\n      data.response &&\n      data.response.summary &&\n      data.response.summary[\"@attributes\"]\n        ? data.response && data.response.summary[\"@attributes\"]\n        : []\n    );\n\nexport const getTopIndustries = async candidateId =>\n  await fetch(`${baseUrl}&method=candIndustry&cid=${candidateId}`)\n    .then(res => res.json())\n    .then(data =>\n      data &&\n      data.response &&\n      data.response.industries &&\n      data.response.industries.industry\n        ? data.response.industries.industry.map(\n            industry => industry[\"@attributes\"]\n          )\n        : []\n    );\n\nexport const getTopSectors = async candidateId =>\n  await fetch(`${baseUrl}&method=candSector&cid=${candidateId}`)\n    .then(res => res.json())\n    .then(data =>\n      data &&\n      data.response &&\n      data.response.sectors &&\n      data.response.sectors.sector\n        ? data.response.sectors.sector.map(industry => industry[\"@attributes\"])\n        : []\n    );\n\nexport const getCandidateFinances = async candidateId =>\n  await fetch(`${baseUrl}&method=memPFDprofile&cid=${candidateId}`)\n    .then(res => res.json())\n    .then(data => {\n      if (data && data.response && data.response.member_profile) {\n        let obj = {};\n        if (data.response.member_profile[\"@attributes\"]) {\n          obj.attributes = data.response.member_profile[\"@attributes\"];\n        }\n        if (\n          data.response.member_profile.assets &&\n          data.response.member_profile.assets.asset\n        ) {\n          obj.assets = data.response.member_profile.assets.asset.map(\n            x => x[\"@attributes\"]\n          );\n        }\n        if (\n          data.response.member_profile.positions &&\n          data.response.member_profile.positions.position\n        ) {\n          obj.positions = data.response.member_profile.positions.position.map(\n            x => x[\"@attributes\"]\n          );\n        }\n        return obj;\n      }\n      return null;\n    })\n    .catch(err => {\n      console.log(\"Error getting asset info for CID \", candidateId);\n      return null;\n    });\n","export const states = [\n  { key: \"AL\", value: \"AL\", text: \"Alabama\" },\n  { key: \"CA\", value: \"CA\", text: \"California\" },\n  { key: \"IL\", value: \"IL\", text: \"Illinois\" },\n  { key: \"MI\", value: \"MI\", text: \"Michigan\" },\n  { key: \"MN\", value: \"MN\", text: \"Minnesota\" },\n  { key: \"PA\", value: \"PA\", text: \"Pennsylvania\" }\n];\n","import React from \"react\";\nimport {\n  Container,\n  Select,\n  Segment,\n  Dimmer,\n  Loader,\n  Icon,\n  Grid,\n  Image\n} from \"semantic-ui-react\";\nimport {\n  getTopContributors,\n  getCandidates,\n  getTopIndustries,\n  getCandidateDetails,\n  getCandidateFinances,\n  getTopSectors\n} from \"./utils/api\";\nimport { states } from \"./utils/constants\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedState: null,\n      candidates: [],\n      loading: false,\n      selectedCandidate: null,\n      topContributors: {},\n      topIndustries: [],\n      topSectors: [],\n      loadingCandidateDetails: false,\n      sortDirection: \"desc\"\n    };\n  }\n\n  sortAsc = (a, b) =>\n    parseFloat(a.details.total) > parseFloat(b.details.total)\n      ? 1\n      : parseFloat(b.details.total) > parseFloat(a.details.total)\n      ? -1\n      : 0;\n\n  sortDesc = (a, b) =>\n    parseFloat(a.details.total) > parseFloat(b.details.total)\n      ? -1\n      : parseFloat(b.details.total) > parseFloat(a.details.total)\n      ? 1\n      : 0;\n\n  getCandidatesForState = async (e, data) => {\n    this.setState({\n      loading: true,\n      selectedState: data.value\n    });\n    let candidates = await getCandidates(data.value);\n    candidates = await Promise.all(\n      candidates.map(\n        async candidate =>\n          await getCandidateDetails(candidate.cid)\n            .then(details => ({\n              ...candidate,\n              details\n            }))\n            .catch(err => {\n              console.log(\"Error fetching info for CID \", candidate.cid);\n              return;\n            })\n      )\n    );\n    candidates = candidates.filter(x => x);\n    candidates = await Promise.all(\n      candidates.map(\n        async candidate =>\n          await getCandidateFinances(candidate.cid)\n            .then(finances => ({\n              ...candidate,\n              finances\n            }))\n            .catch(err => {\n              console.log(\"Error fetching info for CID \", candidate.cid);\n              return;\n            })\n      )\n    );\n    candidates = candidates\n      .filter(x => x)\n      .sort(this.state.sortDirection === \"asc\" ? this.sortAsc : this.sortDesc);\n    this.setState({\n      candidates,\n      loading: false\n    });\n  };\n\n  selectCandidate = async id => {\n    if (this.state.selectedCandidate === id) {\n      this.setState({ selectedCandidate: null });\n    } else {\n      this.setState({\n        loadingCandidateDetails: true,\n        selectedCandidate: id\n      });\n      const topContributors = await getTopContributors(id);\n      const topIndustries = await getTopIndustries(id);\n      const topSectors = await getTopSectors(id);\n      this.setState({\n        topContributors,\n        topIndustries,\n        topSectors,\n        loadingCandidateDetails: false\n      });\n    }\n  };\n\n  getParty = str => {\n    switch (str) {\n      case \"D\":\n        return \"Democrat\";\n      case \"R\":\n        return \"Republican\";\n      case \"3\":\n        return \"Third Party\";\n      case \"L\":\n        return \"Libertarian\";\n      default:\n        return str;\n    }\n  };\n\n  getChamber = str => {\n    switch (str) {\n      case \"H\":\n        return \"House\";\n      case \"S\":\n        return \"Senate\";\n      default:\n        return str;\n    }\n  };\n\n  sortTable = () => {\n    const { sortDirection, candidates } = this.state;\n    let newCandidates = candidates.reverse();\n    let newSortDirection = \"asc\";\n    if (sortDirection === \"asc\") {\n      newSortDirection = \"desc\";\n    }\n    this.setState({\n      candidates: newCandidates,\n      sortDirection: newSortDirection\n    });\n  };\n\n  formatCurrency = amount =>\n    `$${parseFloat(amount).toLocaleString(undefined, {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    })}`;\n\n  render() {\n    const {\n      selectedState,\n      candidates,\n      loading,\n      selectedCandidate,\n      loadingCandidateDetails,\n      topContributors,\n      topIndustries,\n      topSectors,\n      sortDirection\n    } = this.state;\n    return (\n      <div className=\"app\">\n        <Container>\n          <Grid columns={2}>\n            <Grid.Column>\n              <h1>Legislator Contribution Lookup</h1>\n              <p>Select a state to view legislators.</p>\n              <Select\n                placeholder=\"Select your state\"\n                options={states}\n                onChange={this.getCandidatesForState}\n              />\n            </Grid.Column>\n            <Grid.Column className=\"app__grid--right\">\n              <a\n                href=\"https://www.opensecrets.org/elections/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <Image\n                  src=\"https://cdn1.opensecrets.org/rails-assets/production/assets/logos/opensecrets_databy250x88-3de03b11da477be7e81c2a2ef7b2dcdd0d44bad822f2d1e29aff6330676529ca.gif\"\n                  alt=\"Powered by OpenSecrets.org\"\n                />\n              </a>\n            </Grid.Column>\n          </Grid>\n          {selectedState && !loading ? (\n            <Segment>\n              <h2>Legislators for {selectedState}</h2>\n              <div className=\"candidate-table\">\n                <h3>\n                  Click on a legislator to view their top contributors for 2020.\n                </h3>\n                <Icon\n                  name={\n                    sortDirection === \"asc\"\n                      ? \"sort amount down\"\n                      : \"sort amount up\"\n                  }\n                  size=\"large\"\n                  onClick={this.sortTable}\n                />\n              </div>\n              <ul>\n                {candidates.map(x => (\n                  <Segment\n                    key={x.cid}\n                    className=\"candidate-details\"\n                    onClick={() => this.selectCandidate(x.cid)}\n                  >\n                    <div className=\"candidate-details__header\">\n                      <h4>{x.firstlast}</h4>\n                      <h4>{this.getParty(x.details.party)}</h4>\n                      <h4>{this.getChamber(x.details.chamber)}</h4>\n                      <h4>Total: {this.formatCurrency(x.details.total)}</h4>\n                      {x.details.next_election === \"2020\" ? (\n                        <h4 className=\"green\">Election Year</h4>\n                      ) : (\n                        <div />\n                      )}\n                    </div>\n                    {selectedCandidate === x.cid ? (\n                      <React.Fragment>\n                        {loadingCandidateDetails ? (\n                          <Dimmer active inverted>\n                            <Loader active>\n                              Fetching candidate information...\n                            </Loader>\n                          </Dimmer>\n                        ) : (\n                          <div className=\"candidate-details__section\">\n                            <div className=\"candidate-details__finances\">\n                              <h5>Campaign Contributions:</h5>\n                              <p>\n                                Total spent:{\" \"}\n                                {this.formatCurrency(x.details.spent)}\n                              </p>\n                              <p>\n                                Total cash on hand:{\" \"}\n                                {this.formatCurrency(x.details.cash_on_hand)}\n                              </p>\n                              <p>\n                                Total debt:{\" \"}\n                                {this.formatCurrency(x.details.debt)}\n                              </p>\n                            </div>\n                            {x.finances ? (\n                              <div className=\"candidate-details__finances\">\n                                <h5>\n                                  {x.finances.attributes &&\n                                  x.finances.attributes.data_year ? (\n                                    <React.Fragment>\n                                      {x.finances.attributes.data_year}{\" \"}\n                                    </React.Fragment>\n                                  ) : null}\n                                  Personal Finances\n                                </h5>\n                                {x.finances.attributes &&\n                                x.finances.attributes.net_low &&\n                                x.finances.attributes.net_high ? (\n                                  <p>\n                                    Net Worth:{\" \"}\n                                    {this.formatCurrency(\n                                      x.finances.attributes.net_low\n                                    )}{\" \"}\n                                    -{\" \"}\n                                    {this.formatCurrency(\n                                      x.finances.attributes.net_high\n                                    )}\n                                  </p>\n                                ) : null}\n                                {x.finances.attributes &&\n                                x.finances.attributes.asset_low &&\n                                x.finances.attributes.asset_high ? (\n                                  <p>\n                                    Asset Values:{\" \"}\n                                    {this.formatCurrency(\n                                      x.finances.attributes.asset_low\n                                    )}{\" \"}\n                                    -{\" \"}\n                                    {this.formatCurrency(\n                                      x.finances.attributes.asset_high\n                                    )}\n                                  </p>\n                                ) : null}\n                                {x.finances.positions &&\n                                x.finances.positions ? (\n                                  <React.Fragment>\n                                    <br />\n                                    <h5>Positions Held:</h5>\n                                    <ul>\n                                      {x.finances.positions.map(pos => (\n                                        <li>\n                                          {pos.title} @ {pos.organization}\n                                        </li>\n                                      ))}\n                                    </ul>\n                                  </React.Fragment>\n                                ) : null}\n                              </div>\n                            ) : null}\n                            <h5>Top contributors:</h5>\n                            <p>\n                              <i>Note: {topContributors.notice}</i>\n                            </p>\n                            <ul>\n                              {topContributors.contributors.map(x => (\n                                <li key={x.org_name}>\n                                  {x.org_name}: {this.formatCurrency(x.total)}\n                                </li>\n                              ))}\n                            </ul>\n                            <h5>Top industries:</h5>\n                            <ul>\n                              {topIndustries.map(x => (\n                                <li key={x.industry_name}>\n                                  {x.industry_name}:{\" \"}\n                                  {this.formatCurrency(x.total)}\n                                </li>\n                              ))}\n                            </ul>\n                            <h5>Top sectors:</h5>\n                            <ul>\n                              {topSectors.map(x => (\n                                <li key={x.sector_name}>\n                                  {x.sector_name}:{\" \"}\n                                  {this.formatCurrency(x.total)}\n                                </li>\n                              ))}\n                            </ul>\n                          </div>\n                        )}\n                      </React.Fragment>\n                    ) : null}\n                  </Segment>\n                ))}\n              </ul>\n              <p>Source: OpenSecrets.org</p>\n            </Segment>\n          ) : null}\n          {selectedState && loading ? (\n            <Dimmer active inverted>\n              <Loader active>Loading information for {selectedState}...</Loader>\n            </Dimmer>\n          ) : null}\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}