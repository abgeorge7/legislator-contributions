{"version":3,"sources":["utils/api.js","utils/constants.js","App.js","index.js"],"names":["baseUrl","process","getTopContributors","candidateId","a","fetch","then","res","json","data","response","contributors","contributor","map","getCandidates","stateId","legislator","getTopIndustries","industries","industry","states","key","value","text","App","props","getCandidatesForState","e","setState","loading","selectedState","candidates","selectCandidate","id","state","selectedCandidate","loadingCandidateDetails","topContributors","topIndustries","this","className","Container","Select","placeholder","options","onChange","Segment","x","cid","onClick","firstlast","party","Fragment","Loader","active","org_name","parseFloat","total","toLocaleString","industry_name","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1137661e.chunk.js","sourcesContent":["const baseUrl = `https://www.opensecrets.org/api/?apikey=${process.env.REACT_APP_API_KEY}&output=json`;\n\nexport const getTopContributors = async candidateId =>\n  await fetch(`${baseUrl}&method=candContrib&cid=${candidateId}`)\n    .then(res => res.json())\n    .then(data =>\n      data &&\n      data.response &&\n      data.response.contributors &&\n      data.response.contributors.contributor\n        ? data.response.contributors.contributor.map(\n            contributor => contributor[\"@attributes\"]\n          )\n        : []\n    );\n\nexport const getCandidates = async stateId =>\n  await fetch(`${baseUrl}&method=getLegislators&id=${stateId}`)\n    .then(res => res.json())\n    .then(data =>\n      data && data.response && data.response.legislator\n        ? data.response.legislator.map(legislator => legislator[\"@attributes\"])\n        : []\n    );\n\nexport const getTopIndustries = async candidateId =>\n  await fetch(`${baseUrl}&method=candIndustry&cid=${candidateId}`)\n    .then(res => res.json())\n    .then(data =>\n      data &&\n      data.response &&\n      data.response.industries &&\n      data.response.industries.industry\n        ? data.response.industries.industry.map(\n            industry => industry[\"@attributes\"]\n          )\n        : []\n    );\n","export const states = [\n  { key: \"AL\", value: \"AL\", text: \"Alabama\" },\n  { key: \"CA\", value: \"CA\", text: \"California\" },\n  { key: \"IL\", value: \"IL\", text: \"Illinois\" },\n  { key: \"MI\", value: \"MI\", text: \"Michigan\" },\n  { key: \"MN\", value: \"MN\", text: \"Minnesota\" }\n];\n","import React from \"react\";\nimport { Container, Select, Segment, Loader } from \"semantic-ui-react\";\nimport {\n  getTopContributors,\n  getCandidates,\n  getTopIndustries\n} from \"./utils/api\";\nimport { states } from \"./utils/constants\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedState: null,\n      candidates: [],\n      loading: false,\n      selectedCandidate: null,\n      topContributors: [],\n      topIndustries: [],\n      loadingCandidateDetails: false\n    };\n  }\n\n  getCandidatesForState = async (e, data) => {\n    this.setState({\n      loading: true,\n      selectedState: data.value\n    });\n    const candidates = await getCandidates(data.value);\n    this.setState({\n      candidates,\n      loading: false\n    });\n  };\n\n  selectCandidate = async id => {\n    if (this.state.selectedCandidate === id) {\n      this.setState({ selectedCandidate: null });\n    } else {\n      this.setState({\n        loadingCandidateDetails: true,\n        selectedCandidate: id\n      });\n      const topContributors = await getTopContributors(id);\n      const topIndustries = await getTopIndustries(id);\n      this.setState({\n        topContributors,\n        topIndustries,\n        loadingCandidateDetails: false\n      });\n    }\n  };\n\n  render() {\n    const {\n      selectedState,\n      candidates,\n      loading,\n      selectedCandidate,\n      loadingCandidateDetails,\n      topContributors,\n      topIndustries\n    } = this.state;\n    return (\n      <div className=\"app\">\n        <Container>\n          <h1>Legislator Contribution Lookup</h1>\n          <p>Select a state to view legislators.</p>\n          <Select\n            placeholder=\"Select your state\"\n            options={states}\n            onChange={this.getCandidatesForState}\n          />\n          {selectedState && !loading ? (\n            <Segment>\n              <h2>Legislators for {selectedState}</h2>\n              <h3>\n                Click on a legislator to view their top contributors for 2020.\n              </h3>\n              <ul>\n                {candidates.map(x => (\n                  <Segment\n                    key={x.cid}\n                    className=\"candidate-details\"\n                    onClick={() => this.selectCandidate(x.cid)}\n                  >\n                    <h4>\n                      {x.firstlast}: {x.party}\n                    </h4>\n                    {selectedCandidate === x.cid ? (\n                      <React.Fragment>\n                        {loadingCandidateDetails ? (\n                          <Loader active>\n                            Fetching candidate information...\n                          </Loader>\n                        ) : (\n                          <Segment>\n                            <h5>Top contributors:</h5>\n                            <ul>\n                              {topContributors.map(x => (\n                                <li key={x.org_name}>\n                                  {x.org_name}: $\n                                  {parseFloat(x.total).toLocaleString()}\n                                </li>\n                              ))}\n                            </ul>\n                            <h5>Top industries:</h5>\n                            <ul>\n                              {topIndustries.map(x => (\n                                <li key={x.industry_name}>\n                                  {x.industry_name}: $\n                                  {parseFloat(x.total).toLocaleString()}\n                                </li>\n                              ))}\n                            </ul>\n                          </Segment>\n                        )}\n                      </React.Fragment>\n                    ) : null}\n                  </Segment>\n                ))}\n              </ul>\n            </Segment>\n          ) : null}\n          {selectedState && loading ? (\n            <Loader active>Loading information for {selectedState}...</Loader>\n          ) : null}\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}